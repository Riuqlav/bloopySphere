---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.rook.io/release
      chart: rook-ceph-cluster
      version: v1.9.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  dependsOn:
    - name: rook-ceph
  install:
    remediation:
      retries: 7
    # crds: CreateReplace
  upgrade:
    remediation:
      retries: 7
      remediateLastFailure: true # remediate the last failure, when no retries remain
    # crds: CreateReplace
  values:
    monitoring:
      createPrometheusRules: true
      enabled: true
    ingress:
      ingressClassName: traefik
      dashboard:
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/instance: "bloop-quarky"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Rook"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        host:
          name: "rook.${XYZ_DOMAIN}"
          path: "/"
        tls:
          - secretName: tls.rook
            hosts:
              - "rook.${XYZ_DOMAIN}"
    cephClusterSpec:
      healthCheck:
        daemonHealth:
          mon:
            disabled: false
            interval: 60s
        livenessProbe:
          mon:
            probe:
              timeoutSeconds: 10
          mgr:
            probe:
              timeoutSeconds: 10
          osd:
            probe:
              timeoutSeconds: 5

        startupProbe:
          mon:
            probe:
              timeoutSeconds: 10
          mgr:
            probe:
              timeoutSeconds: 10
          osd:
            probe:
              timeoutSeconds: 5
      mgr:
        count: 2
      placement:
        all:
          tolerations:
            - effect: NoSchedule
              operator: Exists
            - effect: NoExecute
              operator: Exists
      resources:
        mgr:
          requests:
            # @default cpu 600m
            cpu: 300m
        mgr-sidecar:
          # @default cpu 600m
          requests:
            cpu: 100m
        mon:
          requests:
            # @default cpu 1000m
            cpu: 200m
        osd:
          requests:
            # @default cpu 3000m
            cpu: 600m
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      mon:
        count: 3
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "${NODE_0_NAME}"
            devices:
              - name: "${NODE_0_DEVICE_0}"
              - name: "${NODE_0_DEVICE_1}"
          - name: "${NODE_1_NAME}"
            devices:
              - name: "${NODE_1_DEVICE_0}"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 2
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems: []
      #- name: ceph-filesystem
      #  spec:
      #    metadataPool:
      #      replicated:
      #        size: 1
      #    dataPools:
      #      - failureDomain: host
      #        replicated:
      #          size: 1
      #    metadataServer:
      #      activeCount: 1
      #      activeStandby: true
      #  storageClass:
      #    enabled: true
      #    isDefault: false
      #    name: ceph-filesystem
      #    reclaimPolicy: Delete
      #    allowVolumeExpansion: true
      #    mountOptions: []
      #    parameters:
      #      csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
      #      csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
      #      csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
      #      csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
      #      csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
      #      csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
      #      csi.storage.k8s.io/fstype: ext4
    cephObjectStores: []
